#! /bin/bash
#
#	mcsrv - A minecraft server wrapper
#
#	Copyright (C) 2012 Richard Neumann <mail@richard-neumann.de>
#
#	This program is free software: you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation, either version 3 of the License, or
#	at your option) any later version.
#
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with this program.  If not, see <http://www.gnu.org/licenses/>.

####################
# Global variables #
####################

# Minectl's home directory
MC_HOME="/home/minectl"

# The directory containing the servers
SERVERS_DIR="$MC_HOME/servers"

# The directory containing the libraries
LIB_DIR="/usr/local/libexec/minectl"

# The shared library's path
MC_LIB="$LIB_DIR/minelib"

# The meta-config file's name
CFG_FILE=./.mined.cfg

# The name of the server
SERVER_NAME=$1


###########################
# Miscellaneous functions #
###########################

# Create named pipes
mk_fifos() {
	for FIFO in stdin stdout stderr; do
		if [ -e $FIFO ]; then
			if [ ! -p $FIFO ]; then
				fail "File $FIFO is blocking eponymous pipe"
			fi
		else
			mkfifo $FIFO
		fi
	done
}


###############
# Main script #
###############

# Check for shared library
if [ -f $MC_LIB ]; then
	. $MC_LIB
else
	echo -e "Shared library could not be found" 1>&2
	exit 1
fi

if [ $# -ne 1 ]; then
	fail "Usage: `basename $0` <server_name>" 
fi

# Change to server's directory
access_server "$SERVER_NAME" || fail

# Source configuration file
. $CFG_FILE 2> /dev/null || fail "Configuration file is missing"

# Set default values for required 
# configuration parameters
if [ -z "$XMS" ]; then
	XMS="512M"
fi

if [ -z "$XMX" ]; then
	XMX="1024M"
fi

# Set executable
EXEC="/usr/bin/java -Xms$XMS -Xmx$XMX $CUSTOM_JAVA_ARGS -jar minecraft_server.jar $JAR_FILE_ARGS"

# If we specified a CPU affinity list, assign the process
if [ -n "$CPU_AFFINITY" ]; then
	EXEC="/bin/taskset -c $CPU_AFFINITY $EXEC"
fi

# If we specified a nice value, run the process with it
if [ -n "$NICENESS" ]; then
	EXEC="/bin/nice -n $NICENESS $EXEC"
fi

# Create FIFO pipes
mk_fifos

# Start the server and connect it to the named pipes
exec $EXEC 0<> stdin 1<> stdout 2<> stderr
