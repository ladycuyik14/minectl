#! /bin/bash
#
#	mcsrv - A minecraft server wrapper
#
#	Copyright (C) 2012 Richard Neumann <mail@richard-neumann.de>
#
#	This program is free software: you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation, either version 3 of the License, or
#	at your option) any later version.
#
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with this program.  If not, see <http://www.gnu.org/licenses/>.

####################
# Global variables #
####################

# First parameter is the server's name
SERVER_NAME="$1"

# The directory containing the libraries
LIB_DIR="/usr/local/libexec/minectl"

# Handle events
mcsrv_handle_events() {
	# Read the server's stderr fifo
	while read EVENT; do
		# All event handling scripts must have the 
		# *.eh suffix
		if ( `ls "$SERVER_EVENT_HANDLERS_DIR"/*.eh > /dev/null 2> /dev/null` ); then
			for EVENT_HANDLER in "$SERVER_EVENT_HANDLERS_DIR"/*.eh; do
				$EVENT_HANDLER "$SERVER_NAME" "$EVENT" &
			done
		fi
	done < "$SERVER_STDERR"

	# Return zero-state in any case
	return 0
}

# Set default values for required 
# configuration parameters
mcsrv_set_defaults() {
	# Minimum Java heap size
	if [ -z "$XMS" ]; then
		XMS="512M"
	fi

	# Maximum Java heap size
	if [ -z "$XMX" ]; then
		XMX="1024M"
	fi

	# Flag for the event monitor
	if [ -z "$MONITOR_EVENTS" ]; then
		MONITOR_EVENTS=false
	fi

	# Set executable
	EXEC="/usr/bin/java -Xms$XMS -Xmx$XMX $CUSTOM_JAVA_ARGS -jar minecraft_server.jar $JAR_FILE_ARGS"

	# If we specified a CPU affinity list, assign the process
	if [ -n "$CPU_AFFINITY" ]; then
		EXEC="/bin/taskset -c $CPU_AFFINITY $EXEC"
	fi

	# If we specified a nice value, run the process with it
	if [ -n "$NICENESS" ]; then
		EXEC="/bin/nice -n $NICENESS $EXEC"
	fi
}

###############
# Main script #
###############

# Source main library
source /usr/local/libexec/minectl/minelib 2> /dev/null || { echo "Could not load main library" 1>&2; exit 1; }

if [ $# -ne 1 ]; then
	minelib_fail "Usage: `basename $0` <server_name>" 
fi

# Change to server's directory
minelib_access_server "$SERVER_NAME" || minelib_fail

# Source configuration file
source $SERVER_CONFIG 2> /dev/null || minelib_fail "Configuration file is missing"

# Set default values for required 
# configuration parameters
mcsrv_set_defaults

# Backup old log file
if [ -f "$SERVER_LOG_FILE" ]; then
	DATE="`date +%Y-%m-%d_%H:%M:%S`"

	mv "$SERVER_LOG_FILE" "$SERVER_LOG_FILE-$DATE" 2> /dev/null
fi

# Start the server's event monitor
if ( $MONITOR_EVENTS ); then
	 mcsrv_handle_events &
fi

# Begin logfile
echo "Attempting to start server '$SERVER_NAME' on `date +%Y-%m-%d" at "%H:%M:%S`"

# Start the server and connect it to the named pipes
exec $EXEC 0<> $SERVER_STDIN 1<> $SERVER_STDOUT 2<> $SERVER_STDERR
